{"version":3,"sources":["calculator/number.jsx","calculator/operator.jsx","App.js","calculator/display.jsx","serviceWorker.js","index.js"],"names":["Number","numberStyle","backgroundColor","color","width","height","float","border","fontSize","key","this","props","numbers","id","onClick","style","value","Component","Operator","operatorStyle","operator","App","state","string","validateString","char","i","length","toString","isValidAppend","operatorValue","lengths","prevValueInString","deleteEntry","setState","calculateResult","eval","appendOperator","appendNumber","numberValue","clearDisplay","displayStyle","overflow","Fragment","className","margin","clear","Display","type","tabIndex","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94d77441.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Number extends Component {\r\n  numberStyle = {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    float: \"left\",\r\n    border: \"1px solid black\",\r\n    fontSize: \"20px\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        key={this.props.numbers.id}\r\n        onClick={() => this.props.onClick(this.props.numbers.id)}\r\n        style={this.numberStyle}\r\n      >\r\n        {this.props.numbers.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Number;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Operator extends Component {\r\n  operatorStyle = {\r\n    backgroundColor: \"#F2274F\",\r\n    color: \"white\",\r\n    width: \"82px\",\r\n    height: \"60px\",\r\n    float: \"top\",\r\n    border: \"1px solid black\",\r\n    fontSize: \"20px\"\r\n  };\r\n  render() {\r\n    return (\r\n      <button\r\n        key={this.props.operator.id}\r\n        style={this.operatorStyle}\r\n        onClick={() => this.props.onClick(this.props.operator.value)}\r\n      >\r\n        {this.props.operator.id}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Operator;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Number from \"./calculator/number\";\nimport Operator from \"./calculator/operator\";\nimport Display from \"./calculator/display\";\n\nclass App extends Component {\n  state = {\n    numbers: [\n      { id: 1, value: 1 },\n      { id: 2, value: 2 },\n      { id: 3, value: 3 },\n      { id: 4, value: 4 },\n      { id: 5, value: 5 },\n      { id: 6, value: 6 },\n      { id: 7, value: 7 },\n      { id: 8, value: 8 },\n      { id: 9, value: 9 },\n      { id: \"D\", value: \"D\" },\n      { id: 0, value: 0 },\n      { id: \"=\", value: \"=\" }\n    ],\n    operator: [\n      { id: \"MUL\", value: \"*\" },\n      { id: \"DIV\", value: \"/\" },\n      { id: \"ADD\", value: \"+\" },\n      { id: \"SUB\", value: \"-\" }\n    ],\n    string: \"\"\n  };\n\n  validateString = () => {\n    let i = 0;\n    let char = \"\";\n    for (i = 0; i < this.state.string.length - 1; i++) {\n      let char = this.state.string[i].toString();\n\n      if (\n        char !== \"0\" &&\n        char !== \"1\" &&\n        char !== \"2\" &&\n        char !== \"3\" &&\n        char !== \"4\" &&\n        char !== \"5\" &&\n        char !== \"6\" &&\n        char !== \"7\" &&\n        char !== \"8\" &&\n        char !== \"9\" &&\n        char !== \"*\" &&\n        char !== \"+\" &&\n        char !== \"-\" &&\n        char !== \"/\"\n      )\n        return false;\n    }\n    char = this.state.string[i].toString();\n\n    if (char === \"*\" || char === \"+\" || char === \"-\" || char === \"/\")\n      return false;\n    return true;\n  };\n\n  isValidAppend = operatorValue => {\n    operatorValue = operatorValue.toString();\n    let lengths = this.state.string.length;\n    if (lengths === 0) {\n      if (\n        operatorValue === \"*\" ||\n        operatorValue === \"/\" ||\n        operatorValue === \"+\"\n      )\n        return false;\n      return true;\n    } else {\n      let prevValueInString = this.state.string[lengths - 1];\n      if (prevValueInString === \"*\" || prevValueInString === \"/\") {\n        if (operatorValue === \"+\" || operatorValue === \"-\") return true;\n        else return false;\n      } else if (prevValueInString === \"-\" || prevValueInString === \"+\")\n        return false;\n      else return true;\n    }\n  };\n\n  deleteEntry = () => {\n    let string = \"\";\n    if (this.state.string === \"Infinity\" || this.state.string === \"NaN\") {\n      this.setState({ string });\n      return;\n    }\n    for (let i = 0; i < this.state.string.length - 1; i++)\n      string += this.state.string[i].toString();\n    this.setState({ string });\n  };\n\n  calculateResult = () => {\n    if (this.validateString() === true) {\n      let string = eval(this.state.string).toString();\n      this.setState({ string });\n    }\n  };\n\n  appendOperator = operatorValue => {\n    let { string } = this.state;\n    if (this.isValidAppend(operatorValue)) string += operatorValue;\n    this.setState({ string });\n  };\n\n  appendNumber = numberValue => {\n    if (numberValue === \"D\") this.deleteEntry();\n    else if (numberValue === \"=\") this.calculateResult();\n    else {\n      let { string } = this.state;\n      string += numberValue;\n      this.setState({ string });\n    }\n  };\n\n  clearDisplay = () => {\n    let string = \"\";\n    this.setState({ string });\n  };\n\n  displayStyle = {\n    backgroundColor: \"black\",\n    color: \"white\",\n    width: \"260px\",\n    height: \"100px\",\n    float: \"top\",\n    border: \"1px solid black\",\n    fontSize: \"50px\",\n    overflow: \"auto\"\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <div style={{ height: \"200px\" }}></div>\n          <div style={{ height: \"500px\", width: \"265px\", margin: \"0px auto\" }}>\n            <div>\n              <div>\n                <Display style={this.displayStyle} value={this.state.string} />\n              </div>\n              <div style={{ float: \"left\" }}>\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[0]}\n                />\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[1]}\n                />\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[2]}\n                />\n                <div style={{ clear: \"both\" }}></div>\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[3]}\n                />\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[4]}\n                />\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[5]}\n                />\n                <div style={{ clear: \"both\" }}></div>\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[6]}\n                />\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[7]}\n                />\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[8]}\n                />\n                <div style={{ clear: \"both\" }}></div>\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[9]}\n                />\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[10]}\n                />\n                <Number\n                  onClick={this.appendNumber}\n                  numbers={this.state.numbers[11]}\n                />\n                <div style={{ clear: \"both\" }}></div>\n              </div>\n\n              <div style={{ float: \"left\" }}>\n                <Operator\n                  onClick={this.appendOperator}\n                  operator={this.state.operator[0]}\n                />\n                <div style={{ clear: \"both\" }}></div>\n                <Operator\n                  onClick={this.appendOperator}\n                  operator={this.state.operator[1]}\n                />\n                <div style={{ clear: \"both\" }}></div>\n                <Operator\n                  onClick={this.appendOperator}\n                  operator={this.state.operator[2]}\n                />\n                <div style={{ clear: \"both\" }}></div>\n                <Operator\n                  onClick={this.appendOperator}\n                  operator={this.state.operator[3]}\n                />\n              </div>\n            </div>\n            <button\n              style={{\n                height: \"60px\",\n                width: \"262px\",\n                backgroundColor: \"#F2274F\",\n                border: \"1px solid black\",\n                fontSize: \"40px\",\n                color: \"white\"\n              }}\n              onClick={this.clearDisplay}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\n\r\nclass Display extends Component {\r\n  render() {\r\n    return (\r\n      <div type=\"text\" style={this.props.style} tabIndex=\"0\">\r\n        {this.props.value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}